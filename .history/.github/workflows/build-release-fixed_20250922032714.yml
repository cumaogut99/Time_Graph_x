name: Build and Release EXE

on:
  push:
    tags:
      - 'v*'  # v1.0.0, v2.1.3 gibi tag'ler iÃ§in Ã§alÄ±ÅŸÄ±r
  workflow_dispatch:  # Manuel tetikleme iÃ§in

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
    - name: Checkout kod
      uses: actions/checkout@v4
      
    - name: Python kurulumu
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~\AppData\Local\pip\Cache
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Gerekli paketleri yÃ¼kle
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller pillow
        pip install PyQt5 matplotlib pandas numpy vaex
        
    - name: Ä°kon dÃ¶nÃ¼ÅŸtÃ¼rme
      run: |
        python -c "
        from PIL import Image
        import os
        
        def convert_png_to_ico(png_path, ico_path):
            try:
                img = Image.open(png_path)
                if img.mode != 'RGBA':
                    img = img.convert('RGBA')
                
                sizes = [(16, 16), (32, 32), (48, 48), (64, 64), (128, 128), (256, 256)]
                icons = []
                for size in sizes:
                    resized = img.resize(size, Image.Resampling.LANCZOS)
                    icons.append(resized)
                
                icons[0].save(ico_path, format='ICO', sizes=[icon.size for icon in icons])
                print(f'Ä°kon dÃ¶nÃ¼ÅŸtÃ¼rÃ¼ldÃ¼: {ico_path}')
                return True
            except Exception as e:
                print(f'Ä°kon dÃ¶nÃ¼ÅŸtÃ¼rme hatasÄ±: {e}')
                return False
        
        if os.path.exists('ikon.png'):
            convert_png_to_ico('ikon.png', 'ikon.ico')
        else:
            print('ikon.png bulunamadÄ±')
        "
        
    - name: EXE oluÅŸtur
      run: |
        pyinstaller --clean --noconfirm time_graph_app.spec
        
    - name: EXE dosyasÄ±nÄ± kontrol et
      run: |
        if (Test-Path "dist\TimeGraphApp.exe") {
          $size = (Get-Item "dist\TimeGraphApp.exe").Length / 1MB
          Write-Host "EXE oluÅŸturuldu: TimeGraphApp.exe ($([math]::Round($size, 1)) MB)"
        } else {
          Write-Error "EXE dosyasÄ± oluÅŸturulamadÄ±!"
          exit 1
        }
        
    - name: EXE'yi sÄ±kÄ±ÅŸtÄ±r
      run: |
        Compress-Archive -Path "dist\TimeGraphApp.exe" -DestinationPath "TimeGraphApp-Windows.zip"
        
    - name: SÃ¼rÃ¼m bilgisini al
      id: version
      run: |
        if ($env:GITHUB_REF -match "refs/tags/(.*)") {
          $version = $matches[1]
        } else {
          $version = "dev-$(Get-Date -Format 'yyyyMMdd-HHmmss')"
        }
        echo "version=$version" >> $env:GITHUB_OUTPUT
        echo "SÃ¼rÃ¼m: $version"
        
    - name: Release oluÅŸtur
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        name: Time Graph App ${{ steps.version.outputs.version }}
        body: |
          ## ğŸš€ Time Graph UygulamasÄ± ${{ steps.version.outputs.version }}
          
          ### ğŸ“¥ Ä°ndirme
          - **Windows:** `TimeGraphApp-Windows.zip` dosyasÄ±nÄ± indirin
          - **Kurulum:** ZIP'i aÃ§Ä±n ve `TimeGraphApp.exe` dosyasÄ±nÄ± Ã§alÄ±ÅŸtÄ±rÄ±n
          
          ### âœ¨ Ã–zellikler
          - Veri analizi ve gÃ¶rselleÅŸtirme
          - CSV ve Excel dosya desteÄŸi
          - Maksimum dosya boyutu: 25 MB
          - GeliÅŸmiÅŸ grafik araÃ§larÄ±
          - Tema desteÄŸi
          
          ### ğŸ”§ Sistem Gereksinimleri
          - Windows 10/11 (64-bit)
          - Minimum 4 GB RAM
          - 100 MB boÅŸ disk alanÄ±
          
          ### ğŸ“‹ SÃ¼rÃ¼m NotlarÄ±
          - Performans iyileÅŸtirmeleri
          - Hata dÃ¼zeltmeleri
          - KullanÄ±cÄ± arayÃ¼zÃ¼ gÃ¼ncellemeleri
          
        files: |
          TimeGraphApp-Windows.zip
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Artifact yÃ¼kle (geliÅŸtirme iÃ§in)
      if: "!startsWith(github.ref, 'refs/tags/')"
      uses: actions/upload-artifact@v3
      with:
        name: TimeGraphApp-Dev-${{ steps.version.outputs.version }}
        path: TimeGraphApp-Windows.zip
        retention-days: 30
